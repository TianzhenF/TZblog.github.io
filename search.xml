<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo 部署到github并绑定域名</title>
      <link href="/2022/11/13/deploy/"/>
      <url>/2022/11/13/deploy/</url>
      
        <content type="html"><![CDATA[<h1 id="打包发布"><a href="#打包发布" class="headerlink" title="打包发布"></a>打包发布</h1><blockquote><p>hexo提供了 资源清理，生成静态资源，一键部署功能，建议生成资源前 先清理</p></blockquote><h2 id="清理资源"><a href="#清理资源" class="headerlink" title="清理资源"></a>清理资源</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><ul><li>执行该命令后，会删除根目录下生成的public目录</li></ul><h2 id="生成静态页"><a href="#生成静态页" class="headerlink" title="生成静态页"></a>生成静态页</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate   简写： hexo g</span><br></pre></td></tr></table></figure><h3 id="1-创建github-io仓库"><a href="#1-创建github-io仓库" class="headerlink" title="1. 创建github.io仓库"></a>1. 创建github.io仓库</h3><blockquote><p>仓库名称必须以 .github.io 结尾，前缀必须是github的用户名，必须是一个公共仓库，如下，最终生成的访问链接为 <a href="https://huahuadelei.github.io/%EF%BC%8Cgithub">https://huahuadelei.github.io/，github</a> pages一个用户只能有一个以用户名为前缀的仓库</p></blockquote><p>()</p><h3 id="2-安装插件github发布插件"><a href="#2-安装插件github发布插件" class="headerlink" title="2. 安装插件github发布插件"></a>2. 安装插件github发布插件</h3><p>在项目下执行如下命令安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="3-配置-config-yml部署相关信息"><a href="#3-配置-config-yml部署相关信息" class="headerlink" title="3. 配置_config.yml部署相关信息"></a>3. 配置_config.yml部署相关信息</h3><p>_config.yml最下方补充相关配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: &#x27;git@github.com:huahuadelei/hexo-test.github.io.git&#x27;</span><br><span class="line">  branch: &#x27;main&#x27;</span><br></pre></td></tr></table></figure><h3 id="4-配置本地sshkey到github中（授权）"><a href="#4-配置本地sshkey到github中（授权）" class="headerlink" title="4. 配置本地sshkey到github中（授权）"></a>4. 配置本地sshkey到github中（授权）</h3><p>一般使用ssh用户目录都会有一对ssh密钥对。如果没有使用 ssh-keygen 命令进行生成</p><p>找到用户目录中 ~.ssh&#x2F;id_rsa.pub 文件，把内容复制到github中</p><h3 id="5-执行命令部署网站"><a href="#5-执行命令部署网站" class="headerlink" title="5. 执行命令部署网站"></a>5. 执行命令部署网站</h3><p>在项目根目录下，打开命令行执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>执行完毕后，如下命令行展示<br>()<br>此时查看github仓库也是已经有了数据</p><p>访问github pages网站查看部署内容，https:&#x2F;&#x2F; + 刚刚创建的仓库名称，<a href="https://huahuadelei.github.io/">https://huahuadelei.github.io/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>github项目部署新手</title>
      <link href="/2022/11/13/index/"/>
      <url>/2022/11/13/index/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="github项目部署新手"><a href="#github项目部署新手" class="headerlink" title="github项目部署新手"></a>github项目部署新手</h2><img src="https://img-blog.csdnimg.cn/73ffc5f3a4f147edbebe212ce131aab0.png">   <h2 id="完成以上三个点-点击提交-create-repository"><a href="#完成以上三个点-点击提交-create-repository" class="headerlink" title="完成以上三个点,点击提交(create repository)"></a>完成以上三个点,点击提交(create repository)</h2><h2 id="完成后"><a href="#完成后" class="headerlink" title="完成后:"></a>完成后:</h2><img src="https://img-blog.csdnimg.cn/e9158fce29734a47ab31bb1012ef2e7d.png"/><h2 id="去下载git"><a href="#去下载git" class="headerlink" title="去下载git "></a>去下载git </h2><h2 id="下载git-Git-git-scm-com"><a href="#下载git-Git-git-scm-com" class="headerlink" title="下载git:  Git (git-scm.com)"></a>下载git:  Git (git-scm.com)</h2><h2 id="完成后-1"><a href="#完成后-1" class="headerlink" title="完成后"></a>完成后</h2><h2 id="把你的项目创建一个文件夹"><a href="#把你的项目创建一个文件夹" class="headerlink" title="把你的项目创建一个文件夹"></a>把你的项目创建一个文件夹</h2><img src="https://img-blog.csdnimg.cn/5f9148ecfb7943828c3fe6c1984086af.png"/><h2 id="进入你要部署的项目文件夹-在这里右键点击git-bash-Here"><a href="#进入你要部署的项目文件夹-在这里右键点击git-bash-Here" class="headerlink" title="进入你要部署的项目文件夹,在这里右键点击git bash Here"></a>进入你要部署的项目文件夹,在这里右键点击git bash Here</h2><img src="https://img-blog.csdnimg.cn/bff86d66e4e64e7098f5fcbc333ff539.png"/><h2 id="进入"><a href="#进入" class="headerlink" title="进入"></a>进入</h2><img src="https://img-blog.csdnimg.cn/c312a236507748f2be74baaf0929f694.png"/><h2 id="如果你是第一次配置-就请输入以下命令"><a href="#如果你是第一次配置-就请输入以下命令" class="headerlink" title="如果你是第一次配置,就请输入以下命令"></a>如果你是第一次配置,就请输入以下命令</h2><p>设置全局的用户名和密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;&quot;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/baf36d5d25ad4a22bf6cba1410dca9e3.png"/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;&quot;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/3874c24c9d6f42bd8e47172edb7322ef.png"/><p>为了避免每次上传都要输入一次用户名和密码,设置一下SSH公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;xxxxxxxx@163.com&quot;    </span><br><span class="line">回车三次</span><br></pre></td></tr></table></figure><p>C:\Users\TianZ.ssh</p><p> 找到id_rsa.pub文件,打开复制里面全部内容<br><img src="https://img-blog.csdnimg.cn/d259313e840146f7861627baebad8d0a.png"/></p><p>回到github上打开Settings<br><img src="https://img-blog.csdnimg.cn/a31ad43b092c4ad899d66ee3750ee23c.png"/><br><img src="https://img-blog.csdnimg.cn/c4b0dcb2a68a463dbe7816d681ddf3ca.png"/><br><img src="https://img-blog.csdnimg.cn/0b74d06e9e084e44930fb6dbd3cc9d2a.png"/></p><p> </p><p>初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/6628c0a7c43f4857810308199f2a834b.jpeg"/><p> 你的项目文件夹中会出现.git文件</p><img src="https://img-blog.csdnimg.cn/25031e01088a49a084f01949a44c958a.png"/><p>如果没有请打开”隐藏的项目”  (我用的win11系统)<br><img src="https://img-blog.csdnimg.cn/2f9f5b6a1c1649efa379e5d54c09a602.png"/></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .         //git add 提交的文件的全称   git add . 提交全部文件</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/88779e8546a744fda9520445076d7530.png"/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;第一次提交&quot;            //&quot;&quot;是描述,自己可随便修改</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/e58dea7f06d94ccb9c408cb5ae856885.png"/><p> 添加远程仓库 <a href="https://github.com/TianzhenF/easyblog.git%E8%BF%99%E4%B8%AA%E6%98%AF%E6%88%91%E7%9A%84%E5%9C%B0%E5%9D%80">https://github.com/TianzhenF/easyblog.git这个是我的地址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/TianzhenF/easyblog.git</span><br></pre></td></tr></table></figure><p>回到github页面点击code</p><img src="https://img-blog.csdnimg.cn/308bf316de304be38fedcc4384256b33.png"/><p>因为现在建的 github 工程默认名为了 main,所以我们要把master改成main</p><p>修改本地的master仓库名称修改成远程端main</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m master main </span><br></pre></td></tr></table></figure><p> 示范</p><img src="https://img-blog.csdnimg.cn/f0d48ea1d4bc4a6c9f56d7cdddfb1a18.png"/> <p>本地仓库和github仓库进行关联,推送到本地仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin main   </span><br></pre></td></tr></table></figure><p>示范 <br><img src="https://img-blog.csdnimg.cn/2f3bb2ff57c341248789b9c66fe8c139.png"/></p><p>回到github页面,点击Settings</p><img src="https://img-blog.csdnimg.cn/753176b1771347bfa956f22596d3d93b.png"/><p>找到pages-source(选择Deploy from a branch)-Branch(选择main-root)-Save</p><img src="https://img-blog.csdnimg.cn/73c390a92cb24e28ad3d28fe371bc86c.png"/><p>成功后显示</p><img src="https://img-blog.csdnimg.cn/bdac1538888c483b8d056db6839a14a2.png"/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main -f        //-f 强制提交</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/44510747050d488f939005983bf4f1c2.png"/><p>然后就成功了</p><img src="https://img-blog.csdnimg.cn/6817185f3d6243b1b599082a4000b8e2.png"/><p>完成!!!</p><p>有什么问题可以提出来,一起解决</p><p>​</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/13/hello-world/"/>
      <url>/2022/11/13/hello-world/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=3024189&auto=1&height=66"></iframe>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
